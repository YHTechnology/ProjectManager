/------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("productmanageModel", "actiontoroleaction", "action", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SilverlightApplication2.Web.Module.action), "role_action", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SilverlightApplication2.Web.Module.role_action), true)]
[assembly: EdmRelationshipAttribute("productmanageModel", "useractiontoactionid", "action", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SilverlightApplication2.Web.Module.action), "user_action", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SilverlightApplication2.Web.Module.user_action), true)]
[assembly: EdmRelationshipAttribute("productmanageModel", "departmentidkey", "department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SilverlightApplication2.Web.Module.department), "user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SilverlightApplication2.Web.Module.user), true)]
[assembly: EdmRelationshipAttribute("productmanageModel", "roleidtouserrole", "role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SilverlightApplication2.Web.Module.role), "user_role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SilverlightApplication2.Web.Module.user_role), true)]
[assembly: EdmRelationshipAttribute("productmanageModel", "roletoroleaction", "role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SilverlightApplication2.Web.Module.role), "role_action", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SilverlightApplication2.Web.Module.role_action), true)]
[assembly: EdmRelationshipAttribute("productmanageModel", "useractiontouserid", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SilverlightApplication2.Web.Module.user), "user_action", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SilverlightApplication2.Web.Module.user_action), true)]
[assembly: EdmRelationshipAttribute("productmanageModel", "useridtouserrole", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SilverlightApplication2.Web.Module.user), "user_role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SilverlightApplication2.Web.Module.user_role), true)]

#endregion

namespace SilverlightApplication2.Web.Module
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class productmanageEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new productmanageEntities object using the connection string found in the 'productmanageEntities' section of the application configuration file.
        /// </summary>
        public productmanageEntities() : base("name=productmanageEntities", "productmanageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new productmanageEntities object.
        /// </summary>
        public productmanageEntities(string connectionString) : base(connectionString, "productmanageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new productmanageEntities object.
        /// </summary>
        public productmanageEntities(EntityConnection connection) : base(connection, "productmanageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<action> action
        {
            get
            {
                if ((_action == null))
                {
                    _action = base.CreateObjectSet<action>("action");
                }
                return _action;
            }
        }
        private ObjectSet<action> _action;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<department> department
        {
            get
            {
                if ((_department == null))
                {
                    _department = base.CreateObjectSet<department>("department");
                }
                return _department;
            }
        }
        private ObjectSet<department> _department;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<role> role
        {
            get
            {
                if ((_role == null))
                {
                    _role = base.CreateObjectSet<role>("role");
                }
                return _role;
            }
        }
        private ObjectSet<role> _role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<role_action> role_action
        {
            get
            {
                if ((_role_action == null))
                {
                    _role_action = base.CreateObjectSet<role_action>("role_action");
                }
                return _role_action;
            }
        }
        private ObjectSet<role_action> _role_action;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> user
        {
            get
            {
                if ((_user == null))
                {
                    _user = base.CreateObjectSet<user>("user");
                }
                return _user;
            }
        }
        private ObjectSet<user> _user;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user_action> user_action
        {
            get
            {
                if ((_user_action == null))
                {
                    _user_action = base.CreateObjectSet<user_action>("user_action");
                }
                return _user_action;
            }
        }
        private ObjectSet<user_action> _user_action;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user_role> user_role
        {
            get
            {
                if ((_user_role == null))
                {
                    _user_role = base.CreateObjectSet<user_role>("user_role");
                }
                return _user_role;
            }
        }
        private ObjectSet<user_role> _user_role;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the action EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaction(action action)
        {
            base.AddObject("action", action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the department EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodepartment(department department)
        {
            base.AddObject("department", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorole(role role)
        {
            base.AddObject("role", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the role_action EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorole_action(role_action role_action)
        {
            base.AddObject("role_action", role_action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser(user user)
        {
            base.AddObject("user", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user_action EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser_action(user_action user_action)
        {
            base.AddObject("user_action", user_action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user_role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser_role(user_role user_role)
        {
            base.AddObject("user_role", user_role);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="productmanageModel", Name="action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new action object.
        /// </summary>
        /// <param name="action_id">Initial value of the action_id property.</param>
        public static action Createaction(global::System.Int32 action_id)
        {
            action action = new action();
            action.action_id = action_id;
            return action;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 action_id
        {
            get
            {
                return _action_id;
            }
            set
            {
                if (_action_id != value)
                {
                    Onaction_idChanging(value);
                    ReportPropertyChanging("action_id");
                    _action_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("action_id");
                    Onaction_idChanged();
                }
            }
        }
        private global::System.Int32 _action_id;
        partial void Onaction_idChanging(global::System.Int32 value);
        partial void Onaction_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String action_name
        {
            get
            {
                return _action_name;
            }
            set
            {
                Onaction_nameChanging(value);
                ReportPropertyChanging("action_name");
                _action_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("action_name");
                Onaction_nameChanged();
            }
        }
        private global::System.String _action_name;
        partial void Onaction_nameChanging(global::System.String value);
        partial void Onaction_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> action_code
        {
            get
            {
                return _action_code;
            }
            set
            {
                Onaction_codeChanging(value);
                ReportPropertyChanging("action_code");
                _action_code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("action_code");
                Onaction_codeChanged();
            }
        }
        private Nullable<global::System.Int32> _action_code;
        partial void Onaction_codeChanging(Nullable<global::System.Int32> value);
        partial void Onaction_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> action_type
        {
            get
            {
                return _action_type;
            }
            set
            {
                Onaction_typeChanging(value);
                ReportPropertyChanging("action_type");
                _action_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("action_type");
                Onaction_typeChanged();
            }
        }
        private Nullable<global::System.Int32> _action_type;
        partial void Onaction_typeChanging(Nullable<global::System.Int32> value);
        partial void Onaction_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> supper_action_id
        {
            get
            {
                return _supper_action_id;
            }
            set
            {
                Onsupper_action_idChanging(value);
                ReportPropertyChanging("supper_action_id");
                _supper_action_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("supper_action_id");
                Onsupper_action_idChanged();
            }
        }
        private Nullable<global::System.Int32> _supper_action_id;
        partial void Onsupper_action_idChanging(Nullable<global::System.Int32> value);
        partial void Onsupper_action_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "actiontoroleaction", "role_action")]
        public EntityCollection<role_action> role_action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<role_action>("productmanageModel.actiontoroleaction", "role_action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<role_action>("productmanageModel.actiontoroleaction", "role_action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "useractiontoactionid", "user_action")]
        public EntityCollection<user_action> user_action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_action>("productmanageModel.useractiontoactionid", "user_action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_action>("productmanageModel.useractiontoactionid", "user_action", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="productmanageModel", Name="department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new department object.
        /// </summary>
        /// <param name="department_id">Initial value of the department_id property.</param>
        public static department Createdepartment(global::System.Int32 department_id)
        {
            department department = new department();
            department.department_id = department_id;
            return department;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 department_id
        {
            get
            {
                return _department_id;
            }
            set
            {
                if (_department_id != value)
                {
                    Ondepartment_idChanging(value);
                    ReportPropertyChanging("department_id");
                    _department_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("department_id");
                    Ondepartment_idChanged();
                }
            }
        }
        private global::System.Int32 _department_id;
        partial void Ondepartment_idChanging(global::System.Int32 value);
        partial void Ondepartment_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String department_name
        {
            get
            {
                return _department_name;
            }
            set
            {
                Ondepartment_nameChanging(value);
                ReportPropertyChanging("department_name");
                _department_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("department_name");
                Ondepartment_nameChanged();
            }
        }
        private global::System.String _department_name;
        partial void Ondepartment_nameChanging(global::System.String value);
        partial void Ondepartment_nameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "departmentidkey", "user")]
        public EntityCollection<user> user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user>("productmanageModel.departmentidkey", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user>("productmanageModel.departmentidkey", "user", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="productmanageModel", Name="role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new role object.
        /// </summary>
        /// <param name="role_id">Initial value of the role_id property.</param>
        public static role Createrole(global::System.Int32 role_id)
        {
            role role = new role();
            role.role_id = role_id;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 role_id
        {
            get
            {
                return _role_id;
            }
            set
            {
                if (_role_id != value)
                {
                    Onrole_idChanging(value);
                    ReportPropertyChanging("role_id");
                    _role_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("role_id");
                    Onrole_idChanged();
                }
            }
        }
        private global::System.Int32 _role_id;
        partial void Onrole_idChanging(global::System.Int32 value);
        partial void Onrole_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String role_name
        {
            get
            {
                return _role_name;
            }
            set
            {
                Onrole_nameChanging(value);
                ReportPropertyChanging("role_name");
                _role_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("role_name");
                Onrole_nameChanged();
            }
        }
        private global::System.String _role_name;
        partial void Onrole_nameChanging(global::System.String value);
        partial void Onrole_nameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "roleidtouserrole", "user_role")]
        public EntityCollection<user_role> user_role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_role>("productmanageModel.roleidtouserrole", "user_role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_role>("productmanageModel.roleidtouserrole", "user_role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "roletoroleaction", "role_action")]
        public EntityCollection<role_action> role_action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<role_action>("productmanageModel.roletoroleaction", "role_action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<role_action>("productmanageModel.roletoroleaction", "role_action", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="productmanageModel", Name="role_action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class role_action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new role_action object.
        /// </summary>
        /// <param name="role_action_id">Initial value of the role_action_id property.</param>
        public static role_action Createrole_action(global::System.Int32 role_action_id)
        {
            role_action role_action = new role_action();
            role_action.role_action_id = role_action_id;
            return role_action;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 role_action_id
        {
            get
            {
                return _role_action_id;
            }
            set
            {
                if (_role_action_id != value)
                {
                    Onrole_action_idChanging(value);
                    ReportPropertyChanging("role_action_id");
                    _role_action_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("role_action_id");
                    Onrole_action_idChanged();
                }
            }
        }
        private global::System.Int32 _role_action_id;
        partial void Onrole_action_idChanging(global::System.Int32 value);
        partial void Onrole_action_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> role_id
        {
            get
            {
                return _role_id;
            }
            set
            {
                Onrole_idChanging(value);
                ReportPropertyChanging("role_id");
                _role_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("role_id");
                Onrole_idChanged();
            }
        }
        private Nullable<global::System.Int32> _role_id;
        partial void Onrole_idChanging(Nullable<global::System.Int32> value);
        partial void Onrole_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> action_id
        {
            get
            {
                return _action_id;
            }
            set
            {
                Onaction_idChanging(value);
                ReportPropertyChanging("action_id");
                _action_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("action_id");
                Onaction_idChanged();
            }
        }
        private Nullable<global::System.Int32> _action_id;
        partial void Onaction_idChanging(Nullable<global::System.Int32> value);
        partial void Onaction_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isPermit
        {
            get
            {
                return _isPermit;
            }
            set
            {
                OnisPermitChanging(value);
                ReportPropertyChanging("isPermit");
                _isPermit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isPermit");
                OnisPermitChanged();
            }
        }
        private Nullable<global::System.Boolean> _isPermit;
        partial void OnisPermitChanging(Nullable<global::System.Boolean> value);
        partial void OnisPermitChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "actiontoroleaction", "action")]
        public action action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<action>("productmanageModel.actiontoroleaction", "action").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<action>("productmanageModel.actiontoroleaction", "action").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<action> actionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<action>("productmanageModel.actiontoroleaction", "action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<action>("productmanageModel.actiontoroleaction", "action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "roletoroleaction", "role")]
        public role role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<role>("productmanageModel.roletoroleaction", "role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<role>("productmanageModel.roletoroleaction", "role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<role> roleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<role>("productmanageModel.roletoroleaction", "role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<role>("productmanageModel.roletoroleaction", "role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="productmanageModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static user Createuser(global::System.Int32 user_id)
        {
            user user = new user();
            user.user_id = user_id;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_name
        {
            get
            {
                return _user_name;
            }
            set
            {
                Onuser_nameChanging(value);
                ReportPropertyChanging("user_name");
                _user_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_name");
                Onuser_nameChanged();
            }
        }
        private global::System.String _user_name;
        partial void Onuser_nameChanging(global::System.String value);
        partial void Onuser_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_password
        {
            get
            {
                return _user_password;
            }
            set
            {
                Onuser_passwordChanging(value);
                ReportPropertyChanging("user_password");
                _user_password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_password");
                Onuser_passwordChanged();
            }
        }
        private global::System.String _user_password;
        partial void Onuser_passwordChanging(global::System.String value);
        partial void Onuser_passwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_cname
        {
            get
            {
                return _user_cname;
            }
            set
            {
                Onuser_cnameChanging(value);
                ReportPropertyChanging("user_cname");
                _user_cname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_cname");
                Onuser_cnameChanged();
            }
        }
        private global::System.String _user_cname;
        partial void Onuser_cnameChanging(global::System.String value);
        partial void Onuser_cnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_department_id
        {
            get
            {
                return _user_department_id;
            }
            set
            {
                Onuser_department_idChanging(value);
                ReportPropertyChanging("user_department_id");
                _user_department_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_department_id");
                Onuser_department_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_department_id;
        partial void Onuser_department_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_department_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String user_title
        {
            get
            {
                return _user_title;
            }
            set
            {
                Onuser_titleChanging(value);
                ReportPropertyChanging("user_title");
                _user_title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("user_title");
                Onuser_titleChanged();
            }
        }
        private global::System.String _user_title;
        partial void Onuser_titleChanging(global::System.String value);
        partial void Onuser_titleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "departmentidkey", "department")]
        public department department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<department>("productmanageModel.departmentidkey", "department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<department>("productmanageModel.departmentidkey", "department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<department> departmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<department>("productmanageModel.departmentidkey", "department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<department>("productmanageModel.departmentidkey", "department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "useractiontouserid", "user_action")]
        public EntityCollection<user_action> user_action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_action>("productmanageModel.useractiontouserid", "user_action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_action>("productmanageModel.useractiontouserid", "user_action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "useridtouserrole", "user_role")]
        public EntityCollection<user_role> user_role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_role>("productmanageModel.useridtouserrole", "user_role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_role>("productmanageModel.useridtouserrole", "user_role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="productmanageModel", Name="user_action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user_action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user_action object.
        /// </summary>
        /// <param name="user_action_id">Initial value of the user_action_id property.</param>
        public static user_action Createuser_action(global::System.Int32 user_action_id)
        {
            user_action user_action = new user_action();
            user_action.user_action_id = user_action_id;
            return user_action;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_action_id
        {
            get
            {
                return _user_action_id;
            }
            set
            {
                if (_user_action_id != value)
                {
                    Onuser_action_idChanging(value);
                    ReportPropertyChanging("user_action_id");
                    _user_action_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_action_id");
                    Onuser_action_idChanged();
                }
            }
        }
        private global::System.Int32 _user_action_id;
        partial void Onuser_action_idChanging(global::System.Int32 value);
        partial void Onuser_action_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> action_id
        {
            get
            {
                return _action_id;
            }
            set
            {
                Onaction_idChanging(value);
                ReportPropertyChanging("action_id");
                _action_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("action_id");
                Onaction_idChanged();
            }
        }
        private Nullable<global::System.Int32> _action_id;
        partial void Onaction_idChanging(Nullable<global::System.Int32> value);
        partial void Onaction_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isPermit
        {
            get
            {
                return _isPermit;
            }
            set
            {
                OnisPermitChanging(value);
                ReportPropertyChanging("isPermit");
                _isPermit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isPermit");
                OnisPermitChanged();
            }
        }
        private Nullable<global::System.Boolean> _isPermit;
        partial void OnisPermitChanging(Nullable<global::System.Boolean> value);
        partial void OnisPermitChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "useractiontoactionid", "action")]
        public action action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<action>("productmanageModel.useractiontoactionid", "action").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<action>("productmanageModel.useractiontoactionid", "action").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<action> actionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<action>("productmanageModel.useractiontoactionid", "action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<action>("productmanageModel.useractiontoactionid", "action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "useractiontouserid", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("productmanageModel.useractiontouserid", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("productmanageModel.useractiontouserid", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("productmanageModel.useractiontouserid", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("productmanageModel.useractiontouserid", "user", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="productmanageModel", Name="user_role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user_role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user_role object.
        /// </summary>
        /// <param name="user_role_id">Initial value of the user_role_id property.</param>
        public static user_role Createuser_role(global::System.Int32 user_role_id)
        {
            user_role user_role = new user_role();
            user_role.user_role_id = user_role_id;
            return user_role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_role_id
        {
            get
            {
                return _user_role_id;
            }
            set
            {
                if (_user_role_id != value)
                {
                    Onuser_role_idChanging(value);
                    ReportPropertyChanging("user_role_id");
                    _user_role_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_role_id");
                    Onuser_role_idChanged();
                }
            }
        }
        private global::System.Int32 _user_role_id;
        partial void Onuser_role_idChanging(global::System.Int32 value);
        partial void Onuser_role_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private Nullable<global::System.Int32> _user_id;
        partial void Onuser_idChanging(Nullable<global::System.Int32> value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> role_id
        {
            get
            {
                return _role_id;
            }
            set
            {
                Onrole_idChanging(value);
                ReportPropertyChanging("role_id");
                _role_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("role_id");
                Onrole_idChanged();
            }
        }
        private Nullable<global::System.Int32> _role_id;
        partial void Onrole_idChanging(Nullable<global::System.Int32> value);
        partial void Onrole_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isPermit
        {
            get
            {
                return _isPermit;
            }
            set
            {
                OnisPermitChanging(value);
                ReportPropertyChanging("isPermit");
                _isPermit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isPermit");
                OnisPermitChanged();
            }
        }
        private Nullable<global::System.Boolean> _isPermit;
        partial void OnisPermitChanging(Nullable<global::System.Boolean> value);
        partial void OnisPermitChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "roleidtouserrole", "role")]
        public role role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<role>("productmanageModel.roleidtouserrole", "role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<role>("productmanageModel.roleidtouserrole", "role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<role> roleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<role>("productmanageModel.roleidtouserrole", "role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<role>("productmanageModel.roleidtouserrole", "role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("productmanageModel", "useridtouserrole", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("productmanageModel.useridtouserrole", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("productmanageModel.useridtouserrole", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("productmanageModel.useridtouserrole", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("productmanageModel.useridtouserrole", "user", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
